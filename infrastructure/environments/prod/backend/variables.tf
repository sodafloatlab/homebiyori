variable "aws_region" {
  description = "AWS region"
  type        = string
  default     = "ap-northeast-1"
}

variable "environment" {
  description = "Environment name"
  type        = string
  default     = "prod"
}

variable "project_name" {
  description = "Project name"
  type        = string
  default     = "homebiyori"
}

variable "common_tags" {
  description = "Common tags to apply to all resources"
  type        = map(string)
  default = {
    Project     = "homebiyori"
    Environment = "prod"
    ManagedBy   = "terraform"
  }
}

# Lambda configuration - individual paths are managed via local.lambda_zip_paths
# These variables are deprecated - paths are now handled dynamically

# Lambda Layers configuration - commonレイヤーのみ
variable "create_common_layer" {
  description = "Whether to create the common dependencies layer"
  type        = bool
  default     = true
}

variable "common_layer_arn" {
  description = "ARN of existing common Lambda layer (if create_common_layer=false)"
  type        = string
  default     = ""
}

variable "environment_variables" {
  description = "Environment variables for Lambda functions"
  type        = map(string)
  default     = {}
}

# Cognito configuration
variable "callback_urls" {
  description = "List of allowed callback URLs for OAuth"
  type        = list(string)
  default = [
    "https://homebiyori.com/auth/callback",
    "https://www.homebiyori.com/auth/callback",
    "http://localhost:3000/auth/callback"
  ]
}

variable "logout_urls" {
  description = "List of allowed logout URLs for OAuth"
  type        = list(string)
  default = [
    "https://homebiyori.com",
    "https://www.homebiyori.com",
    "http://localhost:3000"
  ]
}


variable "enable_google_oauth" {
  description = "Enable Google OAuth integration"
  type        = bool
  default     = true
}

# Google OAuth credentials are now managed via Parameter Store
# These variables are deprecated - credentials are retrieved from SSM

# Additional variables needed for the new architecture
variable "bedrock_model_id" {
  description = "Amazon Bedrock model ID for AI functionality"
  type        = string
  default     = "anthropic.claude-3-haiku-20240307-v1:0"
}

# Lambda deployment package paths
variable "lambda_zip_path" {
  description = "Path to the main Lambda deployment package"
  type        = string
  default     = "../../../lambda_function.zip"
}

variable "stripe_webhook_zip_paths" {
  description = "Map of Stripe webhook Lambda function names to their zip file paths"
  type        = map(string)
  default     = {
    handle-payment-succeeded    = "../../../webhook_service/stripe/handle_payment_succeeded.zip"
    handle-payment-failed       = "../../../webhook_service/stripe/handle_payment_failed.zip"
    handle-subscription-updated = "../../../webhook_service/stripe/handle_subscription_updated.zip"
  }
}

# Contact Service configuration - subscriptions managed manually
# Automatic email subscriptions are disabled

# CloudWatch Logs retention configuration
variable "log_retention_days" {
  description = "CloudWatch Logs retention period in days for Lambda functions and API Gateway"
  type        = number
  default     = 7

  validation {
    condition = contains([
      1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653
    ], var.log_retention_days)
    error_message = "Log retention days must be a valid CloudWatch value."
  }
}

# =====================================
# Stripe EventBridge Variables - Issue #28
# =====================================

# Stripe webhook deployments are managed via local.stripe_webhook_zip_paths
# These variables are deprecated - paths are handled dynamically

# Stripe Partner Event Source ID for EventBridge integration
variable "stripe_partner_event_source_id" {
  description = "Stripe Partner Event Source ID (auto-generated by Stripe) - only the part after 'aws.partner/stripe.com/'"
  type        = string
  sensitive   = true
  
  validation {
    condition     = var.stripe_partner_event_source_id != "CHANGE_ME" && var.stripe_partner_event_source_id != null && var.stripe_partner_event_source_id != ""
    error_message = "Please set stripe_partner_event_source_id in terraform.tfvars. Copy the ID from Stripe Dashboard → Developers → Webhooks → EventBridge integration."
  }
}